#include <ctype.h>

void print_usage();
char *copy_str(char *str, uint32_t *length, bool escape);
dt_property *new_dtp();
dt_entry *new_dte();
char *new_data(int length);
uint32_t get_num_children(dt_entry *dte);
uint32_t get_num_properties(dt_entry *dte);
uint32_t get_dt_size(dt_entry *dte);
char *build_dt_entry(char *dst, dt_entry *dte);
DTEntry *read_dt_entry(DTEntry *parent, dt_entry *this_parent);
dt_entry *find_dte(dt_entry *dte, char *query, bool recursive);
char *get_dte_name(dt_entry *dte);
dt_entry *find_dte_path(dt_entry *dte, char *path);
dt_property *find_dtp(dt_entry *dte, char *query, bool recursive);
dt_property *find_dtp_path(dt_entry *dte, char *path);
void update_dtp_links(dt_entry *dte, dt_property *dtp);
dt_property *add_dtp_uint8(dt_entry *dte, char *name, uint8_t value);
dt_property *add_dtp_uint16(dt_entry *dte, char *name, uint16_t value);
dt_property *add_dtp_uint32(dt_entry *dte, char *name, uint32_t value);
dt_property *add_dtp_uint64(dt_entry *dte, char *name, uint64_t value);
dt_property *add_dtp_data(dt_entry *dte, char *name, char *data, uint32_t length);
dt_entry *add_dte(dt_entry *dte, char *name);
dt_entry *add_dte_path(dt_entry *dte, char *path);
dt_entry *add_dtp_path(dt_entry *dte, char *path, char *data, uint32_t length);
bool del_dtp(dt_property *dtp);
bool del_dtp_path(dt_entry *dte, char *path);
void free_dte(dt_entry *dte);
bool del_dte(dt_entry *dte);
bool del_dte_path(dt_entry *dte, char *path);
void set_dtp_value(dt_property *dtp, uint64_t value, uint32_t length);
void set_dtp_data(dt_property *dtp, char *data, uint32_t length);
char *get_file_buf(char *path, size_t *size);
void apply_diff_mask(dt_entry *dte, dt_property *mask_properties);
char *parse_diff_array(char *data, int length, int size);
void apply_dtb_diff(dt_entry *dte, FILE *fp);
char *get_dtp_value(dt_property *dtp);
void print_branches(dt_entry *current, dt_entry *child);
void print_dte(dt_entry *dte, int index);
